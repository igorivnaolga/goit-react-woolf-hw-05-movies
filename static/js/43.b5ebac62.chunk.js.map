{"version":3,"file":"static/js/43.b5ebac62.chunk.js","mappings":"2NAGaA,EAAsBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAO/BC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0IAQrBG,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,KAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qIAWxBM,EAAaR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6CAKvBQ,EAAaV,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0L,mBCAlC,EAvBmB,SAAHU,GAAmB,IAAbC,EAAKD,EAALC,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACjB,EAAmB,CAAAkB,SACjBJ,EAAMK,KAAI,SAAAC,GAAI,OACbH,EAAAA,EAAAA,KAACb,EAAS,CAAAc,UACRG,EAAAA,EAAAA,MAACf,EAAS,CAACgB,GAAE,WAAAC,OAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAMX,GAAWG,SAAA,EAC7DD,EAAAA,EAAAA,KAACR,EAAU,CACTkB,IACEP,EAAKQ,YAAW,kCAAAL,OACsBH,EAAKQ,aACvCC,EAENC,IAAKV,EAAKW,SAEZd,EAAAA,EAAAA,KAACN,EAAU,CAAAO,SAAEE,EAAKW,YAVNX,EAAKI,GAYT,KAIpB,C,+HC/BA,EAAsB,uBAAtB,EAA0D,8BAA1D,EAA2G,oCAA3G,EAAuK,yCAAvK,EAAkO,mC,SCiClO,EA/BkB,SAAHX,GAAsB,IAAhBmB,EAAQnB,EAARmB,SACnB,OACEf,EAAAA,EAAAA,KAAA,OAAKgB,UAAWC,EAAQhB,UACtBD,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,CACLC,cAAe,CACbC,MAAO,IAETL,SAAU,SAACM,EAAQC,GACjBP,EAASM,EAAOD,OAEhBE,EAAQC,WACV,EAAEtB,UAEFG,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACR,UAAWC,EAAehB,SAAA,EAC9BD,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAAST,UAAWC,EAAqBhB,UACpDD,EAAAA,EAAAA,KAAA,QAAMgB,UAAWC,EAA0BhB,SAAC,cAE9CD,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CACJV,UAAWC,EACXQ,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,KAAK,QACLC,YAAY,wBAMxB,E,iDC9BaC,EAAgB/C,EAAAA,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMxB8C,EAAiBhD,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oE,oBCNzB+C,EAAkBjD,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sFCmBzC,EAlBe,SAAHU,GAAuB,IAAjBsC,EAAStC,EAATsC,UAChB,OACElC,EAAAA,EAAAA,KAACiC,EAAe,CAAAhC,SACbiC,IACClC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CACHC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAKnB,ECyCA,EApDmB,WACjB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CnB,EAASoB,EAAA,GAAEC,EAAYD,EAAA,GAE9BE,GAA4BC,EAAAA,EAAAA,mBAAiBC,GAAAZ,EAAAA,EAAAA,GAAAU,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBtC,EAAQuC,EAAOE,IAAI,UACzBC,EAAAA,EAAAA,YAAU,WACR,GAAK1C,EAAL,CAEA,IAAM2C,EAAY,eAAAnE,GAAAoE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjBd,GAAa,GAAMa,EAAAE,KAAA,GACOC,EAAAA,EAAAA,IAAanD,GAAO,KAAD,EAAvC+C,EAAWC,EAAAI,KACjBxB,EAAUmB,EAAYM,SACa,IAA/BN,EAAYM,QAAQC,OACtBtB,EAAS,YAETA,EAAS,MACVgB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEDhB,EAAQgB,EAAAO,IAAQ,QAEI,OAFJP,EAAAC,KAAA,GAEhBd,GAAa,GAAOa,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAfiB,OAAAtE,EAAAkF,MAAA,KAAAC,UAAA,KAiBlBhB,GAnBkB,CAoBpB,GAAG,CAAC3C,IAKJ,OACEhB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAACgF,EAAS,CAACjE,SALM,SAAAK,GACnBwC,EAAU,CAAExC,MAAAA,GACd,KAIIpB,EAAAA,EAAAA,KAACiF,EAAM,CAAC/C,UAAWA,IAElBiB,GAAmB,aAAVA,IACRnD,EAAAA,EAAAA,KAAC+B,EAAa,CAAA9B,SAAC,wDAIhB8C,EAAO2B,OAAS,IAAK1E,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACrF,MAAOkD,IAC9B,aAAVI,IACC/C,EAAAA,EAAAA,MAAC4B,EAAc,CAAA/B,SAAA,CAAC,UAAQmB,EAAM,oBAItC,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 14px;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 300px;\n  max-height: 500px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: block;\n  text-align: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 15px;\n  font-weight: bold;\n  font-size: 18px;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 300px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListContainer,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieTitle,\n} from './MoviesList.styled';\n\nimport movieplaceholder from 'services/movieplaceholder.png';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <MoviesListContainer>\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            <MovieImage\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : movieplaceholder\n              }\n              alt={film.title}\n            />\n            <MovieTitle>{film.title}</MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesListContainer>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"Div\":\"Searchbar_Div__0HDNt\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__7AAWA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\"};","import { Field, Form, Formik } from 'formik';\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n    <div className={css.Div}>\n      <Formik\n        initialValues={{\n          query: '',\n        }}\n        onSubmit={(values, actions) => {\n          onSubmit(values.query);\n\n          actions.resetForm();\n        }}\n      >\n        <Form className={css.SearchForm}>\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n          <Field\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            name=\"query\"\n            placeholder=\"Search movies\"\n          />\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default Searchbar;\n","import styled from 'styled-components';\n\nexport const StyleErrorMsg = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: red;\n`;\n\nexport const StyledNotFound = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: red;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  /* align-items: center; */\n  justify-content: center;\n`;\n","import { Bars } from 'react-loader-spinner';\n\nimport { LoaderContainer } from './Loader.styled';\nconst Loader = ({ isLoading }) => {\n  return (\n    <LoaderContainer>\n      {isLoading && (\n        <Bars\n          height=\"80\"\n          width=\"80\"\n          color=\"#551A8B\"\n          ariaLabel=\"bars-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { searchMovies } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { StyleErrorMsg, StyledNotFound } from './MoviesPage.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [params, setParams] = useSearchParams();\n\n  const query = params.get('query');\n  useEffect(() => {\n    if (!query) return;\n\n    const handleSearch = async () => {\n      try {\n        setIsLoading(true);\n        const fetchMovies = await searchMovies(query);\n        setMovies(fetchMovies.results);\n        if (fetchMovies.results.length === 0) {\n          setError('notFound');\n        } else {\n          setError(null);\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    handleSearch();\n  }, [query]);\n\n  const handleSubmit = query => {\n    setParams({ query });\n  };\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit} />\n      <Loader isLoading={isLoading} />\n\n      {error && error !== 'notFound' && (\n        <StyleErrorMsg>\n          Oops! Something went wrong. Please try again later.\n        </StyleErrorMsg>\n      )}\n      {movies.length > 0 && <MoviesList films={movies} />}\n      {error === 'notFound' && (\n        <StyledNotFound>Movie \"{query}\" not found.</StyledNotFound>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["MoviesListContainer","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","_ref","films","location","useLocation","_jsx","children","map","film","_jsxs","to","concat","id","state","from","src","poster_path","movieplaceholder","alt","title","onSubmit","className","css","Formik","initialValues","query","values","actions","resetForm","Form","type","Field","autoComplete","autoFocus","name","placeholder","StyleErrorMsg","StyledNotFound","LoaderContainer","isLoading","Bars","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useEffect","handleSearch","_asyncToGenerator","_regeneratorRuntime","_callee","fetchMovies","_context","prev","next","searchMovies","sent","results","length","t0","finish","stop","apply","arguments","Searchbar","Loader","MoviesList"],"sourceRoot":""}