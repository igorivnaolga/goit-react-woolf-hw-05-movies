{"version":3,"file":"static/js/845.73e29b4f.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: whitesmoke;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 400px;\n  border-radius: 8px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 20px;\n`;\n\nexport const Overview = styled.p`\n  font-style: italic;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding-left: 20px;\n  padding-top: 5px;\n  border-radius: 8px;\n`;\n\nexport const AddList = styled.li`\n  padding: 10px;\n`;\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: bold;\n  color: #551a8b;\n  &.active {\n    text-decoration: underline;\n    scale: 1.05;\n    font-weight: bold;\n  }\n`;\nexport const StyledBackLink = styled(Link)`\n  text-decoration: none;\n  font-weight: bold;\n  font-size: 18px;\n  margin: 15px;\n  display: block;\n  color: #551a8b;\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { getDetailsMovies } from 'services/api.js';\nimport { TiArrowBack } from 'react-icons/ti';\n\nimport {\n  DetailsContainer,\n  MovieImage,\n  Overview,\n  AdditionalInfo,\n  MovieInfo,\n  StyledBackLink,\n  AddList,\n  StyledNavLink,\n} from './MovieDetailsPage.styled.js';\n\nimport {\n  ErrorMessage,\n  LoadingMessage,\n} from 'pages/HomePage/HomePage.styled.js';\n\nimport movieplaceholder from 'services/movieplaceholder.png';\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  const params = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        setIsLoading(true);\n        const fetchDetails = await getDetailsMovies(params.movieId);\n        setMovie(fetchDetails);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getDetails();\n  }, [params.movieId]);\n\n  const getUserScore =\n    movie && movie.vote_average ? Math.round(movie.vote_average * 10) : 0;\n\n  return (\n    <>\n      {error && (\n        <ErrorMessage>\n          Oops! Something went wrong! Please try reloading this page!\n        </ErrorMessage>\n      )}\n      {isLoading && <LoadingMessage>Loading...</LoadingMessage>}\n\n      <StyledBackLink to={backLinkRef.current.state?.from ?? '/'}>\n        <TiArrowBack style={{ verticalAlign: 'bottom' }} />\n        Go back\n      </StyledBackLink>\n\n      {movie && (\n        <DetailsContainer>\n          <MovieImage\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : movieplaceholder\n            }\n            alt={movie.title}\n          />\n          <MovieInfo>\n            <h1>{movie.title}</h1>\n            <p>User score: {getUserScore}%</p>\n            <h2>Overview</h2>\n            <Overview>{movie.overview}</Overview>\n            <h2>Genres</h2>\n            {movie.genres.map(\n              (\n                { name },\n                index //перебираємо масив мар жанрів, витягуємо назву жанрів та індекс поточного елемента\n              ) => (\n                <span key={index}>{name} </span> //відмальовуємо унікальний ключ \"індекс\" і рендерим нейм жанру\n              )\n            )}\n          </MovieInfo>\n        </DetailsContainer>\n      )}\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <ul>\n          <AddList>\n            <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n          </AddList>\n          <AddList>\n            <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n          </AddList>\n        </ul>\n      </AdditionalInfo>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["DetailsContainer","styled","_templateObject","_taggedTemplateLiteral","MovieImage","_templateObject2","MovieInfo","_templateObject3","Overview","_templateObject4","AdditionalInfo","_templateObject5","AddList","_templateObject6","StyledNavLink","NavLink","_templateObject7","StyledBackLink","Link","_templateObject8","_backLinkRef$current$","_backLinkRef$current$2","location","useLocation","backLinkRef","useRef","params","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","_getDetails","_asyncToGenerator","_regeneratorRuntime","_callee","fetchDetails","_context","prev","next","getDetailsMovies","movieId","sent","t0","finish","stop","apply","arguments","getDetails","getUserScore","vote_average","Math","round","_jsxs","_Fragment","children","_jsx","ErrorMessage","LoadingMessage","to","current","state","from","TiArrowBack","style","verticalAlign","src","poster_path","concat","movieplaceholder","alt","title","overview","genres","map","_ref","index","name","Outlet"],"sourceRoot":""}