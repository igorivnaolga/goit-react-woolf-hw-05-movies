{"version":3,"file":"static/js/680.f7a6ea42.chunk.js","mappings":"4NAGaA,EAAsBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAO/BC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0IAQrBG,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,KAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qIAWxBM,EAAaR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6CAKvBQ,EAAaV,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0L,mBCAlC,EAvBmB,SAAHU,GAAmB,IAAbC,EAAKD,EAALC,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACjB,EAAmB,CAAAkB,SACjBJ,EAAMK,KAAI,SAAAC,GAAI,OACbH,EAAAA,EAAAA,KAACb,EAAS,CAAAc,UACRG,EAAAA,EAAAA,MAACf,EAAS,CAACgB,GAAE,WAAAC,OAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAMX,GAAWG,SAAA,EAC7DD,EAAAA,EAAAA,KAACR,EAAU,CACTkB,IACEP,EAAKQ,YAAW,kCAAAL,OACsBH,EAAKQ,aACvCC,EAENC,IAAKV,EAAKW,SAEZd,EAAAA,EAAAA,KAACN,EAAU,CAAAO,SAAEE,EAAKW,YAVNX,EAAKI,GAYT,KAIpB,C,yHCOA,UAlCiB,WACf,IAAAQ,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACkB,SAAAC,IAUzB,OAVyBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA1B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEuB,OAFvBF,EAAAC,KAAA,EAEIT,GAAa,GAAMQ,EAAAE,KAAA,GACOC,EAAAA,EAAAA,MAAoB,KAAD,EAAAL,EAAAE,EAAAI,KAArCL,EAAOD,EAAPC,QACRf,EAAUe,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBZ,GAAS,GAAM,QAEK,OAFLY,EAAAC,KAAA,GAEfT,GAAa,GAAOQ,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,EAXc,WACWf,EAAAc,MAAC,KAADC,UAAA,CAW1BC,EACF,GAAG,KAGD1C,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAC+C,EAAAA,GAAa,CAAA9C,SAAC,mBACdsB,IACCvB,EAAAA,EAAAA,KAACgD,EAAAA,GAAY,CAAA/C,SAAC,gEAIf0B,IAAa3B,EAAAA,EAAAA,KAACiD,EAAAA,GAAc,CAAAhD,SAAC,eAC7BkB,EAAO+B,OAAS,IAAKlD,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACtD,MAAOsB,MAG/C,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 14px;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 300px;\n  max-height: 500px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: block;\n  text-align: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 15px;\n  font-weight: bold;\n  font-size: 18px;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 300px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListContainer,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieTitle,\n} from './MoviesList.styled';\n\nimport movieplaceholder from 'services/movieplaceholder.png';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <MoviesListContainer>\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            <MovieImage\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : movieplaceholder\n              }\n              alt={film.title}\n            />\n            <MovieTitle>{film.title}</MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesListContainer>\n  );\n};\n\nexport default MoviesList;\n","import { getTrendingMovies } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { ErrorMessage, LoadingMessage, TrendingTitle } from './HomePage.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrending() {\n      try {\n        setIsLoading(true);\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getTrending();\n  }, []);\n\n  return (\n    <div>\n      <TrendingTitle>Trending today</TrendingTitle>\n      {error && (\n        <ErrorMessage>\n          Oops! Something went wrong! Please try reloading this page!\n        </ErrorMessage>\n      )}\n      {isLoading && <LoadingMessage>Loading...</LoadingMessage>}\n      {movies.length > 0 && <MoviesList films={movies} />}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["MoviesListContainer","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","_ref","films","location","useLocation","_jsx","children","map","film","_jsxs","to","concat","id","state","from","src","poster_path","movieplaceholder","alt","title","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","_getTrending","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendingMov","results","_context","prev","next","getTrendingMovies","sent","t0","finish","stop","apply","arguments","getTrending","TrendingTitle","ErrorMessage","LoadingMessage","length","MoviesList"],"sourceRoot":""}